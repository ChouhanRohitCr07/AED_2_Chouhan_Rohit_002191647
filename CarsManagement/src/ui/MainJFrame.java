/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cars;


/**
 *
 * @author jarvis
 */
public class MainJFrame extends javax.swing.JFrame {
    ArrayList<Cars> carsList;
    String header[]= new String[]{"Car Name", "Serial Number", "Car Model", "Manufacturing Year","Location","Car Capacity","Certicate Expiry","Availability","Time Stamp","Updated Time Stamp"};
    DefaultTableModel defaultTableModel, defaultTableModel1;
    int row, column;
    Cars cars;
    

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        carsList= new ArrayList<>();
        defaultTableModel= new DefaultTableModel(header,0);
        jTableMain.setModel(defaultTableModel);
        defaultTableModel1= new DefaultTableModel(header,0);
        jTableSecondaryTable.setModel(defaultTableModel1);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAvailabilityGroup = new javax.swing.ButtonGroup();
        buttonExpiryGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblBrandName = new javax.swing.JLabel();
        lblSerialNumber = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        lblCarModel = new javax.swing.JLabel();
        lblManuYear = new javax.swing.JLabel();
        txtCarModel = new javax.swing.JTextField();
        comboBoxYear = new javax.swing.JComboBox<>();
        lblLocation = new javax.swing.JLabel();
        lblAvailability = new javax.swing.JLabel();
        lblCapacity = new javax.swing.JLabel();
        comboBoxCapacity = new javax.swing.JComboBox<>();
        comboBoxCity = new javax.swing.JComboBox<>();
        lblCertificateExpiry = new javax.swing.JLabel();
        jRadioButtonExpired = new javax.swing.JRadioButton();
        jRadioButtonActive = new javax.swing.JRadioButton();
        comboBoxCarBrand = new javax.swing.JComboBox<>();
        jCheckBoxAvailable = new javax.swing.JCheckBox();
        jCheckBoxUnavailable = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPaneMainTable = new javax.swing.JScrollPane();
        jTableMain = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonFirstAvailableCar = new javax.swing.JButton();
        jButtonNumberOfAvailableUnavailableCars = new javax.swing.JButton();
        jButtonSearchBrandName = new javax.swing.JButton();
        jButtonListGivenYearData = new javax.swing.JButton();
        jButtonGivenSerialNumber = new javax.swing.JButton();
        jButtonGivenModelNumber = new javax.swing.JButton();
        jButtonListAllManufacturer = new javax.swing.JButton();
        jButtonGivenCity = new javax.swing.JButton();
        jButtonExpiredCertificate = new javax.swing.JButton();
        jButtonSeatsRequirements = new javax.swing.JButton();
        txtMaximum = new javax.swing.JTextField();
        txtMinimum = new javax.swing.JTextField();
        jLabelMinimum = new javax.swing.JLabel();
        jLabelMaximum = new javax.swing.JLabel();
        jScrollPaneSecondaryTable = new javax.swing.JScrollPane();
        jTableSecondaryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBrandName.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblBrandName.setText("Car Brand");

        lblSerialNumber.setText("Serial Number");
        lblSerialNumber.setPreferredSize(new java.awt.Dimension(60, 15));

        lblCarModel.setText("Car Model");

        lblManuYear.setText("Manufacturing Year");
        lblManuYear.setPreferredSize(new java.awt.Dimension(60, 15));
        lblManuYear.setRequestFocusEnabled(false);

        comboBoxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010" }));
        comboBoxYear.setSelectedIndex(-1);
        comboBoxYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxYearActionPerformed(evt);
            }
        });

        lblLocation.setText("Location");

        lblAvailability.setText("Availability");
        lblAvailability.setPreferredSize(new java.awt.Dimension(60, 15));

        lblCapacity.setText("Capacity Seats");
        lblCapacity.setPreferredSize(new java.awt.Dimension(60, 15));
        lblCapacity.setRequestFocusEnabled(false);

        comboBoxCapacity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "5", "7", "11", " " }));
        comboBoxCapacity.setSelectedIndex(-1);

        comboBoxCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "NewYork", "Texas", "California", "Seattle", "NewJersey", "Ohio" }));
        comboBoxCity.setSelectedIndex(-1);

        lblCertificateExpiry.setText("Certificate Expiry");

        buttonExpiryGroup.add(jRadioButtonExpired);
        jRadioButtonExpired.setText("Expired");
        jRadioButtonExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonExpiredActionPerformed(evt);
            }
        });

        buttonExpiryGroup.add(jRadioButtonActive);
        jRadioButtonActive.setText("Active");

        comboBoxCarBrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tesla", "Cadillac", "Mustang", "Lamborghini", "Maruti Suzuki", "Jeep", "Volkswagen", "Ferrari", "Audi", "BMW", "Bentley", "Dodge" }));
        comboBoxCarBrand.setSelectedIndex(-1);
        comboBoxCarBrand.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 255)));
        comboBoxCarBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCarBrandActionPerformed(evt);
            }
        });

        btnAvailabilityGroup.add(jCheckBoxAvailable);
        jCheckBoxAvailable.setText("Available");

        btnAvailabilityGroup.add(jCheckBoxUnavailable);
        jCheckBoxUnavailable.setText("Unavailable");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblBrandName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxCarBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCarModel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblManuYear, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(174, 174, 174)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblCertificateExpiry)
                        .addGap(24, 24, 24)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonActive)
                    .addComponent(jRadioButtonExpired)
                    .addComponent(jCheckBoxUnavailable)
                    .addComponent(jCheckBoxAvailable))
                .addGap(98, 98, 98))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBrandName, lblCarModel, lblManuYear, lblSerialNumber});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboBoxCapacity, comboBoxCity, comboBoxYear, txtCarModel, txtSerialNumber});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jRadioButtonActive, jRadioButtonExpired});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jCheckBoxAvailable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jCheckBoxUnavailable)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblCertificateExpiry)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButtonExpired)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonActive))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManuYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBrandName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBoxCarBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCarModel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblBrandName, lblCarModel, lblManuYear, lblSerialNumber});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {comboBoxCapacity, comboBoxCity, comboBoxYear, txtCarModel, txtSerialNumber});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jRadioButtonActive, jRadioButtonExpired});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAvailability, lblCertificateExpiry});

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save-icon.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete-icon.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-validated-icon.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(173, 173, 173)
                .addComponent(btnUpdate)
                .addGap(400, 400, 400))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Car Fleet ");

        jScrollPaneMainTable.setViewportBorder(javax.swing.BorderFactory.createCompoundBorder());
        jScrollPaneMainTable.setName(""); // NOI18N

        jTableMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jTableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Brand", "Serial Number", "Car Model", "Manufacturing Year", "Location", "Capacity", "Certificate Expiry", "Availability", "Time Stamp", "Update Time Stamp"
            }
        ));
        jTableMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMainMouseClicked(evt);
            }
        });
        jScrollPaneMainTable.setViewportView(jTableMain);

        jButtonFirstAvailableCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Start-Menu-Search-icon.png"))); // NOI18N
        jButtonFirstAvailableCar.setText("Find me the first available passenger car?");
        jButtonFirstAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFirstAvailableCarActionPerformed(evt);
            }
        });

        jButtonNumberOfAvailableUnavailableCars.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Start-Menu-Search-icon.png"))); // NOI18N
        jButtonNumberOfAvailableUnavailableCars.setText("How many cars are currently available. How many are not?");
        jButtonNumberOfAvailableUnavailableCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNumberOfAvailableUnavailableCarsActionPerformed(evt);
            }
        });

        jButtonSearchBrandName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Fetch-icon.png"))); // NOI18N
        jButtonSearchBrandName.setText("List all cars that are made by Toyota, GM, etc.?");
        jButtonSearchBrandName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchBrandNameActionPerformed(evt);
            }
        });

        jButtonListGivenYearData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Start-Menu-Search-icon.png"))); // NOI18N
        jButtonListGivenYearData.setText("List all cars that were manufactured in a given year, ‘x’.");
        jButtonListGivenYearData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListGivenYearDataActionPerformed(evt);
            }
        });

        jButtonGivenSerialNumber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Start-Menu-Search-icon.png"))); // NOI18N
        jButtonGivenSerialNumber.setText("Find a car with the given serial number. List the attributes of the found car");
        jButtonGivenSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGivenSerialNumberActionPerformed(evt);
            }
        });

        jButtonGivenModelNumber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Fetch-icon.png"))); // NOI18N
        jButtonGivenModelNumber.setText("List all cars given the model number.");
        jButtonGivenModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGivenModelNumberActionPerformed(evt);
            }
        });

        jButtonListAllManufacturer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Start-Menu-Search-icon.png"))); // NOI18N
        jButtonListAllManufacturer.setText("List all the car manufacturers used by the (this) Fleet.");
        jButtonListAllManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListAllManufacturerActionPerformed(evt);
            }
        });

        jButtonGivenCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Start-Menu-Search-icon.png"))); // NOI18N
        jButtonGivenCity.setText("List all cars that are available in a given city.");
        jButtonGivenCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGivenCityActionPerformed(evt);
            }
        });

        jButtonExpiredCertificate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Fetch-icon.png"))); // NOI18N
        jButtonExpiredCertificate.setText("List all cars that have expired maintenance certificate.");
        jButtonExpiredCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExpiredCertificateActionPerformed(evt);
            }
        });

        jButtonSeatsRequirements.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Fetch-icon.png"))); // NOI18N
        jButtonSeatsRequirements.setText("List all cars with a minimum of x seats but no more than y seats.");
        jButtonSeatsRequirements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeatsRequirementsActionPerformed(evt);
            }
        });

        txtMaximum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaximumActionPerformed(evt);
            }
        });

        txtMinimum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinimumActionPerformed(evt);
            }
        });

        jLabelMinimum.setText("Minimum");

        jLabelMaximum.setText("Maximum");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonFirstAvailableCar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonNumberOfAvailableUnavailableCars, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSearchBrandName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSeatsRequirements, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonListGivenYearData, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonGivenSerialNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonGivenModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonExpiredCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonListAllManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonGivenCity, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelMinimum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMinimum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMaximum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaximum, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonFirstAvailableCar, jButtonNumberOfAvailableUnavailableCars});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonGivenModelNumber, jButtonGivenSerialNumber, jButtonListGivenYearData, jButtonSeatsRequirements});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonGivenCity, jButtonListAllManufacturer});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabelMaximum, jLabelMinimum, txtMaximum, txtMinimum});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFirstAvailableCar)
                    .addComponent(jButtonListGivenYearData)
                    .addComponent(jButtonListAllManufacturer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNumberOfAvailableUnavailableCars)
                    .addComponent(jButtonGivenSerialNumber)
                    .addComponent(jButtonGivenCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSearchBrandName)
                    .addComponent(jButtonGivenModelNumber)
                    .addComponent(jButtonExpiredCertificate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButtonSeatsRequirements)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaximum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMinimum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMinimum)
                    .addComponent(jLabelMaximum)))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonFirstAvailableCar, jButtonNumberOfAvailableUnavailableCars});

        jTableSecondaryTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jTableSecondaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Brand", "Serial Number", "Car Model", "Manufacturing Year", "Location", "Capacity", "Certificate Expiry", "Availability", "Time Stamp", "Update Time Stamp"
            }
        ));
        jTableSecondaryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSecondaryTableMouseClicked(evt);
            }
        });
        jScrollPaneSecondaryTable.setViewportView(jTableSecondaryTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(628, 628, 628)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneSecondaryTable)
                    .addComponent(jScrollPaneMainTable)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneMainTable, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addComponent(jScrollPaneSecondaryTable, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxYearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        for(Cars cr : carsList){
            if(txtSerialNumber.getText().equalsIgnoreCase(cr.serialNumber)){
                JOptionPane.showMessageDialog(this, "Duplicate Serial Number Found! Serial Number must be Unique!");
                return;
            }
        }
        String serialNumber="";
        String carModel="";
        String manufacturingYear="";
        String carCapacity="";
        String location="";
        String carName="";
        String certificateExpiry="";
        String availability="";
        
        while (true) {   
             if (comboBoxCarBrand.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(this, "Select Name");
            break;
        } else{
            carName = comboBoxCarBrand.getSelectedItem().toString();
        }
        if (txtSerialNumber.getText()== null || txtSerialNumber.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Serial Number");
            break;
        } else{
            serialNumber = txtSerialNumber.getText();
        }  
        //String carModel= txtCarModel.getText();    
         if (txtCarModel.getText()== null || txtCarModel.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Car Model");
            break;
        } else{
            carModel = txtCarModel.getText();
        }
        //String manufacturingYear= comboBoxYear.getSelectedItem().toString();
        if (comboBoxYear.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(this, "Select Year");
            break;
        } else{
            manufacturingYear = comboBoxYear.getSelectedItem().toString();
        }
        
        //String carCapacity= comboBoxCapacity.getSelectedItem().toString();
            try {
                if (comboBoxCapacity.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(this, "Select Seats");
            break;
        } else{
            carCapacity = comboBoxCapacity.getSelectedItem().toString();
        }
            } catch (Exception e) {
            }
        //String location= comboBoxCity.getSelectedItem().toString();
            try {
                if (comboBoxCity.getSelectedIndex()==-1) {
            JOptionPane.showMessageDialog(this, "Select City");
            break;
        } else{
            location = comboBoxCity.getSelectedItem().toString();
        }    
                
            } catch (Exception e) {
                
            }
        
        
        if((jRadioButtonExpired.isSelected()==false)&&(jRadioButtonActive.isSelected()==false)){
        JOptionPane.showMessageDialog(null,"Please select radio button");
        break;
        }else{
            if (jRadioButtonExpired.isSelected()) {
                certificateExpiry="Expired";
            }else if(jRadioButtonActive.isSelected()){
                certificateExpiry="Active";
        }
             if((jCheckBoxAvailable.isSelected()==false)&&(jCheckBoxUnavailable.isSelected()==false)){
        JOptionPane.showMessageDialog(null,"Please select radio button");
        break;
        }else{
            if (jCheckBoxAvailable.isSelected()) {
            availability="Available";
            }
            else if(jCheckBoxUnavailable.isSelected()){
            availability="Unavailable";
            }
            }
        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new java.util.Date());
        
        cars= new Cars(carName, serialNumber,carModel,manufacturingYear,location,carCapacity,certificateExpiry,availability,timeStamp);
        carsList.add(cars);
        defaultTableModel.setRowCount(0);
        
        for(int i=0; i<carsList.size(); i++){
            Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability, carsList.get(i).timeStamp};
            defaultTableModel.addRow(object);
        }
        clearField();
        break;
        }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this,"Delete this data", "Delete", dialogButton);
        
        if (dialogResult==0) {
            defaultTableModel.removeRow(row);
            carsList.remove(row);
            defaultTableModel.setRowCount(0);//this will reset the table and repopulate again with carsList (arraylist)
            for(int i=0; i<carsList.size(); i++){
            Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability,carsList.get(i).timeStamp};
            defaultTableModel.addRow(object);
        }
            clearField();
        }
        else {
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String updateCarName= comboBoxCarBrand.getSelectedItem().toString();
        String updateSerialNumber=txtSerialNumber.getText();
        for(Cars cr : carsList){
            if(updateSerialNumber.equalsIgnoreCase(cr.serialNumber)){
                JOptionPane.showMessageDialog(this, "Duplicate Serial Number Found! Serial Number must be Unique!");
                return;
            }
        }
        String updateCarModel=txtCarModel.getText();
        String updateManufacturingYear= comboBoxYear.getSelectedItem().toString();
        String updateLocation= comboBoxCity.getSelectedItem().toString();
        String updateCarCapacity= comboBoxCapacity.getSelectedItem().toString();
        String updateAvailability="";
        if (jCheckBoxAvailable.isSelected()) {
            updateAvailability="Available";
        }else if(jCheckBoxUnavailable.isSelected()){
            updateAvailability="Unavailable";
        }
        String updateCertificateExpiry="";
        if (jRadioButtonExpired.isSelected()) {
            updateCertificateExpiry="Expired";
        }else if(jRadioButtonActive.isSelected()){
            updateCertificateExpiry="Active";
        }
       
        carsList.get(row).carName= updateCarName;
        carsList.get(row).serialNumber= updateSerialNumber;
        carsList.get(row).carModel=updateCarModel;
        carsList.get(row).manufacturingYear=updateManufacturingYear;
        carsList.get(row).location=updateLocation;
        carsList.get(row).carCapacity=updateCarCapacity;
        carsList.get(row).certificateExpiry=updateCertificateExpiry;
        carsList.get(row).availability=updateAvailability;       
        defaultTableModel.setRowCount(0);
        for(int i=0; i<carsList.size(); i++){
            String updatedTimeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new java.util.Date());
            Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability,carsList.get(i).timeStamp,carsList.get(i).updatedTimeStamp};
            defaultTableModel.addRow(object);
            //defaultTableModel.setValueAt(updatedTimeStamp, row, 9);
        }
        clearField();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jTableMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMainMouseClicked
        // TODO add your handling code here:
        row= jTableMain.getSelectedRow();
        column=jTableMain.getSelectedColumn();
        System.out.println(row+","+column);
        //txtBrandName.setText(defaultTableModel.getValueAt(row,0).toString());
        String carName = defaultTableModel.getValueAt(row, 0).toString();
        for (int i = 0; i < (comboBoxCarBrand.getItemCount()); i++) {
            if (comboBoxCarBrand.getItemAt(i).equalsIgnoreCase(carName)) {
                comboBoxCarBrand.setSelectedIndex(i); 
            }
        }
        txtSerialNumber.setText(defaultTableModel.getValueAt(row, 1).toString());
        txtCarModel.setText(defaultTableModel.getValueAt(row, 2).toString());
        
        
        String manufacturingYear = defaultTableModel.getValueAt(row, 3).toString();
        for (int i = 0; i < (comboBoxYear.getItemCount()); i++) {
            if (comboBoxYear.getItemAt(i).equalsIgnoreCase(manufacturingYear)) {
                comboBoxYear.setSelectedIndex(i); 
            }
        }
        String location = defaultTableModel.getValueAt(row, 4).toString();
        for (int i = 0; i < (comboBoxCity.getItemCount()); i++) {
            if (comboBoxCity.getItemAt(i).equalsIgnoreCase(location)) {
                comboBoxCity.setSelectedIndex(i); 
            }
        }
        
        String capacity = defaultTableModel.getValueAt(row, 5).toString();
        for (int i = 0; i < (comboBoxCapacity.getItemCount()); i++) {
            if (comboBoxCapacity.getItemAt(i).equalsIgnoreCase(capacity)) {
                comboBoxCapacity.setSelectedIndex(i);   
            }
        String certificateExpiry= defaultTableModel.getValueAt(row, 6).toString();
            if (certificateExpiry.equals("Expired")) {
                jRadioButtonExpired.setSelected(true);
                
            } else if(certificateExpiry.equals("Active")){
                jRadioButtonActive.setSelected(true);
            }
        String availability= defaultTableModel.getValueAt(row, 7).toString();
            if (availability.equals("Available")) {
                jCheckBoxAvailable.setSelected(true);
                
            } else if(availability.equals("Unavailable")){
                jCheckBoxUnavailable.setSelected(true);
            }
        }
    }//GEN-LAST:event_jTableMainMouseClicked

    private void jTableSecondaryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSecondaryTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableSecondaryTableMouseClicked

    private void jButtonFirstAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFirstAvailableCarActionPerformed
        // TODO add your handling code here:
        for (int i=0;i<carsList.size();i++){
            if (carsList.get(i).availability.equalsIgnoreCase("Available")) {
                JOptionPane.showMessageDialog(jButtonFirstAvailableCar, "Found!!!");
                defaultTableModel1.setRowCount(0);
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object); 
                return;
            } 
        }       
        JOptionPane.showMessageDialog(jButtonFirstAvailableCar, "Not Found!!!"); 
    }//GEN-LAST:event_jButtonFirstAvailableCarActionPerformed

    private void jButtonNumberOfAvailableUnavailableCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNumberOfAvailableUnavailableCarsActionPerformed
        // TODO add your handling code here:
        int countAvailable=0;
        int countUnavailable=0;
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).availability.equalsIgnoreCase("Available")){
            countAvailable++;
            } 
            }
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).availability.equalsIgnoreCase("Unavailable")){
            countUnavailable++;
            } 
            }   
        JOptionPane.showMessageDialog(jButtonNumberOfAvailableUnavailableCars, "Number of available cars " +countAvailable);
        JOptionPane.showMessageDialog(jButtonNumberOfAvailableUnavailableCars, "Number of unavailable cars " +countUnavailable);
    }//GEN-LAST:event_jButtonNumberOfAvailableUnavailableCarsActionPerformed

    private void jButtonSearchBrandNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchBrandNameActionPerformed
        // TODO add your handling code here:
        String inputManufacturerName = JOptionPane.showInputDialog(this,"Enter Manufacturer Name");
        defaultTableModel1.setRowCount(0);
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).carName.equalsIgnoreCase(inputManufacturerName)){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);
                }
            } 
            JOptionPane.showMessageDialog(jButtonSearchBrandName, "No Car of this brand name "+inputManufacturerName); 
        
    }//GEN-LAST:event_jButtonSearchBrandNameActionPerformed

    private void jButtonListGivenYearDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListGivenYearDataActionPerformed
        // TODO add your handling code here:
        String inputYear = JOptionPane.showInputDialog(this,"Enter Year");
        defaultTableModel1.setRowCount(0);
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).manufacturingYear.equalsIgnoreCase(inputYear)){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);
                }
            } 
        JOptionPane.showMessageDialog(jButtonListGivenYearData, "No Enteries for given year "+inputYear); 
    }//GEN-LAST:event_jButtonListGivenYearDataActionPerformed

    private void jButtonGivenSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGivenSerialNumberActionPerformed
        // TODO add your handling code here:
        String inputSerialNumber = JOptionPane.showInputDialog(this,"Enter Serial Number");
        defaultTableModel1.setRowCount(0);
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).serialNumber.equalsIgnoreCase(inputSerialNumber)){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);
                }
            } 
        JOptionPane.showMessageDialog(jButtonGivenSerialNumber, "No Enteries for given Input Serial Number "+inputSerialNumber);
    }//GEN-LAST:event_jButtonGivenSerialNumberActionPerformed

    private void jButtonGivenModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGivenModelNumberActionPerformed
        // TODO add your handling code here:
        String inputCarModel = JOptionPane.showInputDialog(this,"Enter Car Model ");
        defaultTableModel1.setRowCount(0);
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).carModel.equalsIgnoreCase(inputCarModel)){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);
                }
            } 
        JOptionPane.showMessageDialog(jButtonGivenModelNumber, "No Enteries for given Model  Number "+inputCarModel);
    }//GEN-LAST:event_jButtonGivenModelNumberActionPerformed

    private void jButtonListAllManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListAllManufacturerActionPerformed
        // TODO add your handling code here
        defaultTableModel1.setRowCount(0);
        
        ArrayList<String> arrayListManu = new ArrayList<String>();
        
        for (int i=0;i<carsList.size();i++){
            arrayListManu.add(i, carsList.get(i).carName);           
        }
        ArrayList<String>
        newList = removeDuplicates(arrayListManu);
        JOptionPane.showMessageDialog(jButtonListAllManufacturer, "Cars Manufacturers Name" +newList);   
    }//GEN-LAST:event_jButtonListAllManufacturerActionPerformed
    
    private void jButtonGivenCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGivenCityActionPerformed
        // TODO add your handling code here:
        String inputCity = JOptionPane.showInputDialog(this,"Enter City");
        defaultTableModel1.setRowCount(0);
        for (int i=0;i<carsList.size();i++){
            if(carsList.get(i).location.equalsIgnoreCase(inputCity)){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);
                }
            } 
        JOptionPane.showMessageDialog(jButtonGivenCity, "No Enteries for given city "+inputCity);
    }//GEN-LAST:event_jButtonGivenCityActionPerformed

    private void jButtonExpiredCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExpiredCertificateActionPerformed
        // TODO add your handling code here:
        
        defaultTableModel1.setRowCount(0);
        for (int i = 0; i < carsList.size(); i++) {
            if(carsList.get(i).certificateExpiry.equalsIgnoreCase("Expired")){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);    
            }
            
        }
        JOptionPane.showMessageDialog(jRadioButtonExpired, "No Enteries expired certificate entries ");
        
    }//GEN-LAST:event_jButtonExpiredCertificateActionPerformed

    private void jButtonSeatsRequirementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeatsRequirementsActionPerformed
        // TODO add your handling code here:
        defaultTableModel1.setRowCount(0);
        int minimum = Integer.parseInt(txtMinimum.getText());
        int maximum = Integer.parseInt(txtMaximum.getText());
        
        for (int i = 0; i < carsList.size(); i++) {
            int carCapacityTableData = Integer.parseInt(carsList.get(i).carCapacity);
            if(carCapacityTableData >= minimum  && carCapacityTableData <= maximum){
                Object[] object= {carsList.get(i).carName, carsList.get(i).serialNumber, carsList.get(i).carModel, carsList.get(i).manufacturingYear, carsList.get(i).location, carsList.get(i).carCapacity,carsList.get(i).certificateExpiry,carsList.get(i).availability};
                defaultTableModel1.addRow(object);    
            }
        }
        JOptionPane.showMessageDialog(jButtonSeatsRequirements, "no matches found within serach criteria");
    }//GEN-LAST:event_jButtonSeatsRequirementsActionPerformed

    private void txtMinimumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinimumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinimumActionPerformed

    private void txtMaximumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaximumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaximumActionPerformed

    private void jRadioButtonExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonExpiredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonExpiredActionPerformed

    private void comboBoxCarBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCarBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCarBrandActionPerformed
            
   private ArrayList<String> removeDuplicates(ArrayList<String> arrayListManu) {
       ArrayList<String> newList = new ArrayList<>();
       for (String element : arrayListManu) {
            // If this element is not present in newList then add it
            if (!newList.contains(element)) {
                newList.add(element);
            }
       }
        // return the new list
        return newList;   
    }
   private void clearField() {
            comboBoxCarBrand.requestFocus();
            comboBoxCarBrand.setSelectedIndex(-1);
            txtSerialNumber.setText("");
            txtCarModel.setText("");
            comboBoxYear.setSelectedIndex(-1);
            comboBoxCity.setSelectedIndex(-1);
            comboBoxCapacity.setSelectedIndex(-1);
            jCheckBoxAvailable.setSelected(false);
            jCheckBoxUnavailable.setSelected(false);
            jRadioButtonExpired.setSelected(false);
            jRadioButtonActive.setSelected(false);
        
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.ButtonGroup btnAvailabilityGroup;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonExpiryGroup;
    private javax.swing.JComboBox<String> comboBoxCapacity;
    private javax.swing.JComboBox<String> comboBoxCarBrand;
    private javax.swing.JComboBox<String> comboBoxCity;
    private javax.swing.JComboBox<String> comboBoxYear;
    private javax.swing.JButton jButtonExpiredCertificate;
    private javax.swing.JButton jButtonFirstAvailableCar;
    private javax.swing.JButton jButtonGivenCity;
    private javax.swing.JButton jButtonGivenModelNumber;
    private javax.swing.JButton jButtonGivenSerialNumber;
    private javax.swing.JButton jButtonListAllManufacturer;
    private javax.swing.JButton jButtonListGivenYearData;
    private javax.swing.JButton jButtonNumberOfAvailableUnavailableCars;
    private javax.swing.JButton jButtonSearchBrandName;
    private javax.swing.JButton jButtonSeatsRequirements;
    private javax.swing.JCheckBox jCheckBoxAvailable;
    private javax.swing.JCheckBox jCheckBoxUnavailable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelMaximum;
    private javax.swing.JLabel jLabelMinimum;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonActive;
    private javax.swing.JRadioButton jRadioButtonExpired;
    private javax.swing.JScrollPane jScrollPaneMainTable;
    private javax.swing.JScrollPane jScrollPaneSecondaryTable;
    private javax.swing.JTable jTableMain;
    private javax.swing.JTable jTableSecondaryTable;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblBrandName;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCarModel;
    private javax.swing.JLabel lblCertificateExpiry;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblManuYear;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JTextField txtCarModel;
    private javax.swing.JTextField txtMaximum;
    private javax.swing.JTextField txtMinimum;
    private javax.swing.JTextField txtSerialNumber;
    // End of variables declaration//GEN-END:variables
  
}
